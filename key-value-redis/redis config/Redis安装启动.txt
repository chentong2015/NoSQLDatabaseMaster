TODO. Linux系统安装和启动
> tar -zxvf redis-3.0.0-rc.tar.gz 下载Redis package并解压
> apt install gcc                 安装gcc, 编译redis源码(C++) / Linux Sever Cloud自带gcc
> make                            进入解压的目录，使用gcc进行编译
> cd redis-3.0.0-rc/src           验证目录下面是否生成redis-server和redis-cli
> vim redis.conf                  配置配置文件
      port 6379                   保持默认端口号 ===> 必须开启云服务器的安全组设置，允许外网访问Redis 6379端口
      daemonize yes               表示在后台启动
      protected-mode no           取消保护模式，意味着外网无需身份认证即可登录
                                  配置登录身份的认证 # requirepass foobared
      # bind 127.0.0.1            redis则会监听本服务器所有的IP，这样外网和本机就都可以使用redis服务
> /src/redis-server redis.conf 使用配置文件启动
> ps -ef | grep redis          检测redis进程是否启动成功
       root      7057     1  0 Aug13 ?        00:00:02 src/redis-server *:6379
> netstat -tunpl | grep 6379   查看是否有redis服务或者查看端口(默认的端口是6379)
> /src/redis-cli               使用Redis Client Interface
> keys * 查看是否为空
> quit / exit 退出客户端
> pkill redis-server 退出redis服务
> kill  进程号
> /src/redis-cli shutdown

TODO. Mac安装启动：通过homebrew来直接安装
> brew install redis
  To start redis now and restart at login:
    % brew services start redis
  If you don't want/need a background service you can just run:
    /opt/homebrew/opt/redis/bin/redis-server
    /opt/homebrew/etc/redis.conf
  Summary
    /opt/homebrew/Cellar/redis/7.2.4

> redis-server 启动服务端
> redis-server redis.conf 使用特殊的配置文件来启动服务
> Ctrl+C
> redis-cli 启动客户端
> redis-cli --raw 以原始的形式来显示特殊字符
> redis-cli -p 6380 连接指定端口号的服务
> quit

TODO. 通过docker运行镜像来测试
> docker search redis
> docker pull redis
> docker run -d --name redis-server -p 6379:6379 redis:latest
> docker exec -it _id_container redis-cli 以交互模式进入容器